import java.io.File;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Argumentos {

	private String extension;
	private String nombre;
	private boolean esCarpeta;
	private File carpeta;
	private ArrayList<String> archivos = new ArrayList<String>();
	
	public void validar (String[] argumentos) {
		if (!(argumentos.length == 1)) {	// Si hay mas de un argumento
			System.err.println("HEY!");
			System.err.println("La sintaxis correcta es java VMTranslator xxx.vm o java VMTranslator carpeta");
			System.exit(0);
		}
		
		StringTokenizer st = new StringTokenizer(argumentos[0], ".");	// Lo dividimos por el punto
		
		if (st.countTokens() > 2) {		// Si hay mas de dos tokens al dividir por el punto, no es archivo ni carpeta
			System.err.println("La sintaxis correcta es java VMTranslator xxx.vm o java VMTranslator carpeta");
			System.exit(0);
		} else if (st.countTokens() == 2) {	// Si hay 2 tokens, es un archivo
			nombre = st.nextToken();
			
			extension = st.nextToken();
			extension = extension.toLowerCase();
			
			if (!(extension.equals("vm"))) {	// Si la extensión no es .vm
				System.err.println("La sintaxis correcta es java VMTranslator xxx.vm o java VMTranslator carpeta");
				System.exit(0);
			}
			
			nombre = nombre + ".vm";
			archivos.add(nombre);	// Agregamos el único archivo al ArrayList
			esCarpeta = false;
			
		} else {	// Hay 1 token, es una carpeta
			nombre = st.nextToken();
			
			carpeta = new File(nombre);	// Crea la ruta con el nombre de la carpeta
			esCarpeta = carpeta.isDirectory();	// Chequea si se encuentra en el Path ingresado
			
			if (!esCarpeta) {	// Si no se encuentra, error
				System.err.println("No se encuentra la carpeta " + carpeta);
				System.exit(0);
			} else {	// Si se encuentra, leemos todos sus archivos .vm y los ingresamos al ArrayList
				String[] listaArchivos = carpeta.list();	// Tomamos la lista de archivos en un vector
				
				// Recorremos el vector, pasando los .vm al ArrayList
				for (String archivo : listaArchivos) {
					StringTokenizer sarc = new StringTokenizer(archivo, ".");
					
					if (sarc.countTokens() == 2) {	// Si tiene un nombre.extension
						nombre = sarc.nextToken();	// Tomamos las partes
						extension = sarc.nextToken();
						
						if (extension.equals("vm")) {	// Si la extensión es .vm, lo agregamos
							archivos.add(nombre + "." + extension);
						}
					} else {	// Si no, próximo archivo
						continue;
					}
				}
				
				if (archivos.isEmpty()) {	// Si no se agregaron archivos al ArrayList
					System.err.println("El directiorio seleccionado no contiene ningún archivo .vm");
					System.exit(0);
				}
			}
		}
	}
	
	public ArrayList<String> getArchivos() { return archivos; }
	public boolean esCarpeta() { return esCarpeta; }
}
